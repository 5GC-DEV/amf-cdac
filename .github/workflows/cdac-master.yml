# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Canonical Ltd.
# Copyright 2024 Intel Corporation

name: CDAC Master Workflow

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
 
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      
      - name: Clean Checksum
        run: go mod tidy

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4.0.0
        with:
          version: latest
          args: -v --config ./.golangci.yml

  hadolint:
    name: hadolint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Dockerfile linter
        uses: hadolint/hadolint-action@v3.1.0
        # For now, ignoring:
        # DL3008 warning: Pin versions in apt get install (e.g., apt-get install <package>=<version>); and
        # DL3018 warning: Pin versions in apk add (e.g., apk add <package>=<version>)
        with:
          dockerfile: Dockerfile
          ignore: DL3008,DL3018

  license-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: reuse lint
        uses: fsfe/reuse-action@v3

  fossa-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: FOSSA scan
        uses: fossa-contrib/fossa-action@v3
        with:
          fossa-api-key: 0c3bbcdf20e157bbd487dae173751b28

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Clean Checksum
        run: go mod tidy

      - name: Unit tests
        run: go test ./...

  dockcer-build-images:
    runs-on: ubuntu-latest
    needs: unit-tests

    env:
      REGISTRY: docker.io
      DOCKER_REGISTRY: docker.io/
      DOCKER_REPOSITORY: cdac5g/
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - run: echo GIT_SHA_SHORT=$(git rev-parse --short HEAD) >> $GITHUB_ENV

      - uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCRPASS }}

      - name: Build Docker image
        env:
          DOCKER_TAG: master-latest
        run: |
          make docker-build

      - name: Tag Docker image latest
        run: |
          docker tag 5gc-amf:0.0.2-dev ${{ env.DOCKER_REPOSITORY }}amf:master-latest

      - name: Push Docker image latest to Docker Hub
        run: |
          docker push ${{ env.DOCKER_REPOSITORY }}amf:master-latest

      - name: Tag Docker image "master-GIT_SHA"
        run: |
          docker tag 5gc-amf:0.0.2-dev ${{ env.DOCKER_REPOSITORY }}amf:master-${{ env.GIT_SHA_SHORT }}

      - name: Push Docker image "master-GIT_SHA" to Docker Hub
        run: |
          docker push ${{ env.DOCKER_REPOSITORY }}amf:master-${{ env.GIT_SHA_SHORT }}
